<?xml version="1.0" encoding="UTF-8" ?>

<!--
 Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<!-- This is a "kitchen sink" config file that tests can use.
     When writting a new test, feel free to add *new* items (plugins,
     config options, etc...) as long as they don't break any existing
     tests.  if you need to test something esoteric please add a new
     "solrconfig-your-esoteric-purpose.xml" config file.

     Note in particular that this test is used by MinimalSchemaTest so
     Anything added to this file needs to work correctly even if there
     is now uniqueKey or defaultSearch Field.
  -->

<config>

    <jmx />

    <!-- Used to specify an alternate directory to hold all index data.
         It defaults to "index" if not present, and should probably
         not be changed if replication is in use. -->
    <dataDir>${solr.data.dir:}</dataDir>

    <!--  The DirectoryFactory to use for indexes.
          solr.StandardDirectoryFactory, the default, is filesystem based.
          solr.RAMDirectoryFactory is memory based and not persistent. -->
    <directoryFactory name="DirectoryFactory" class="${solr.directoryFactory:solr.RAMDirectoryFactory}">
        <double name="maxWriteMBPerSecDefault">1000000</double>
        <double name="maxWriteMBPerSecFlush">2000000</double>
        <double name="maxWriteMBPerSecMerge">3000000</double>
        <double name="maxWriteMBPerSecRead">4000000</double>
    </directoryFactory>

    <schemaFactory class="ClassicIndexSchemaFactory"/>

    <luceneMatchVersion>${tests.luceneMatchVersion:LUCENE_CURRENT}</luceneMatchVersion>

    <xi:include href="solrconfig.snippet.randomindexconfig.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>

    <updateHandler class="solr.DirectUpdateHandler2">

        <!-- autocommit pending docs if certain criteria are met
        <autoCommit>
          <maxDocs>10000</maxDocs>
          <maxTime>3600000</maxTime>
        </autoCommit>
        -->
        <!-- represents a lower bound on the frequency that commits may
        occur (in seconds). NOTE: not yet implemented

        <commitIntervalLowerBound>0</commitIntervalLowerBound>
        -->

        <!-- The RunExecutableListener executes an external command.
             exe - the name of the executable to run
             dir - dir to use as the current working directory. default="."
             wait - the calling thread waits until the executable returns. default="true"
             args - the arguments to pass to the program.  default=nothing
             env - environment variables to set.  default=nothing
          -->
        <!-- A postCommit event is fired after every commit
        <listener event="postCommit" class="solr.RunExecutableListener">
          <str name="exe">/var/opt/resin3/__PORT__/scripts/solr/snapshooter</str>
          <str name="dir">/var/opt/resin3/__PORT__</str>
          <bool name="wait">true</bool>
          <arr name="args"> <str>arg1</str> <str>arg2</str> </arr>
          <arr name="env"> <str>MYVAR=val1</str> </arr>
        </listener>
        -->
<!--
        <updateLog enable="${enable.update.log:true}">
            <str name="dir">${solr.ulog.dir:}</str>
        </updateLog>

        <commitWithin>
            <softCommit>${solr.commitwithin.softcommit:true}</softCommit>
        </commitWithin>
        -->

    </updateHandler>

    <query>
        <!-- Maximum number of clauses in a boolean query... can affect
            range or wildcard queries that expand to big boolean
            queries.  An exception is thrown if exceeded.
        -->
        <maxBooleanClauses>1024</maxBooleanClauses>

        <!-- Cache specification for Filters or DocSets - unordered set of *all* documents
             that match a particular query.
          -->
        <filterCache
                class="solr.search.FastLRUCache"
                size="512"
                initialSize="512"
                autowarmCount="2"/>

        <queryResultCache
                class="solr.search.LRUCache"
                size="512"
                initialSize="512"
                autowarmCount="2"/>

        <documentCache
                class="solr.search.LRUCache"
                size="512"
                initialSize="512"
                autowarmCount="0"/>

        <cache name="perSegFilter"
               class="solr.search.LRUCache"
               size="10"
               initialSize="0"
               autowarmCount="10" />

        <!-- If true, stored fields that are not requested will be loaded lazily.
        -->
        <enableLazyFieldLoading>true</enableLazyFieldLoading>

        <!--

        <cache name="myUserCache"
          class="solr.search.LRUCache"
          size="4096"
          initialSize="1024"
          autowarmCount="1024"
          regenerator="MyRegenerator"
          />
        -->

        <!--
        <useFilterForSortedQuery>true</useFilterForSortedQuery>
        -->

        <queryResultWindowSize>10</queryResultWindowSize>

        <!-- set maxSize artificially low to exercise both types of sets -->
        <HashDocSet maxSize="3" loadFactor="0.75"/>

        <!-- boolToFilterOptimizer converts boolean clauses with zero boost
             into cached filters if the number of docs selected by the clause exceeds
             the threshold (represented as a fraction of the total index)
        -->
        <boolTofilterOptimizer enabled="false" cacheSize="32" threshold=".05"/>

        <!-- a newSearcher event is fired whenever a new searcher is being prepared
             and there is a current searcher handling requests (aka registered). -->
        <!-- QuerySenderListener takes an array of NamedList and executes a
             local query request for each NamedList in sequence. -->
        <!--
        <listener event="newSearcher" class="solr.QuerySenderListener">
          <arr name="queries">
            <lst> <str name="q">solr</str> <str name="start">0</str> <str name="rows">10</str> </lst>
            <lst> <str name="q">rocks</str> <str name="start">0</str> <str name="rows">10</str> </lst>
          </arr>
        </listener>
        -->

        <!-- a firstSearcher event is fired whenever a new searcher is being
             prepared but there is no current registered searcher to handle
             requests or to gain prewarming data from. -->
        <!--
        <listener event="firstSearcher" class="solr.QuerySenderListener">
          <arr name="queries">
            <lst> <str name="q">fast_warm</str> <str name="start">0</str> <str name="rows">10</str> </lst>
          </arr>
        </listener>
        -->
        <listener event="firstSearcher" class="org.alfresco.solr.lifecycle.SolrCoreLoadListener" />
    </query>

    <queryResponseWriter name="xml" default="true"
                         class="solr.XMLResponseWriter" />

    <requestHandler name="/replication" class="solr.ReplicationHandler" startup="lazy" />

    <!-- An alternate set representation that uses an integer hash to store filters (sets of docids).
  If the set cardinality <= maxSize elements, then HashDocSet will be used instead of the bitset
  based HashBitset. -->

    <!-- requestHandler plugins... incoming queries will be dispatched to the
       correct handler based on the 'qt' param matching the
       name of registered handlers.
        The "standard" request handler is the default and will be used if qt
       is not specified in the request.
    -->
    <requestHandler name="standard" class="solr.StandardRequestHandler">
        <bool name="httpCaching">true</bool>
    </requestHandler>

    <requestHandler name="/get" class="solr.RealTimeGetHandler">
        <lst name="defaults">
            <str name="omitHeader">true</str>
        </lst>
    </requestHandler>

    <requestHandler name="dismax" class="solr.SearchHandler" >
        <lst name="defaults">
            <str name="defType">dismax</str>
            <str name="q.alt">*:*</str>
            <float name="tie">0.01</float>
            <str name="qf">
                text^0.5 features_t^1.0 subject^1.4 title_stemmed^2.0
            </str>
            <str name="pf">
                text^0.2 features_t^1.1 subject^1.4 title_stemmed^2.0 title^1.5
            </str>
            <str name="bf">
                ord(weight)^0.5 recip(rord(iind),1,1000,1000)^0.3
            </str>
            <str name="mm">
                3&lt;-1 5&lt;-2 6&lt;90%
            </str>
            <int name="ps">100</int>
        </lst>
    </requestHandler>

    <!-- test query parameter defaults -->
    <requestHandler name="defaults" class="solr.StandardRequestHandler">
        <lst name="defaults">
            <int name="rows">4</int>
            <bool name="hl">true</bool>
            <str name="hl.fl">text,name,subject,title,whitetok</str>
        </lst>
    </requestHandler>

    <!-- test query parameter defaults -->
    <requestHandler name="lazy" class="solr.StandardRequestHandler" startup="lazy">
        <lst name="defaults">
            <int name="rows">4</int>
            <bool name="hl">true</bool>
            <str name="hl.fl">text,name,subject,title,whitetok</str>
        </lst>
    </requestHandler>

    <requestHandler name="/update" class="solr.UpdateRequestHandler"  />

    <searchComponent name="fingerprint" class="org.alfresco.solr.component.FingerPrintComponent"/>

    <requestHandler name="/fingerprint" class="org.apache.solr.handler.component.AlfrescoSearchHandler" lazy="true" >
        <arr name="components">
            <str>fingerprint</str>
        </arr>
    </requestHandler>

    <requestHandler name="/afts" class="org.apache.solr.handler.component.AlfrescoSearchHandler" lazy="true" >
        <lst name="defaults">
             <str name="defType">afts</str>
             <str name="spellcheck">false</str>
             <str name="spellcheck.extendedResults">false</str>
             <str name="spellcheck.count">5</str>
             <str name="spellcheck.alternativeTermCount">2</str>
             <str name="spellcheck.maxResultsForSuggest">5</str>
             <str name="spellcheck.collate">true</str>
             <str name="spellcheck.collateExtendedResults">true</str>
             <str name="spellcheck.maxCollationTries">5</str>
             <str name="spellcheck.maxCollations">3</str>
             <str name="carrot.title">mltext@m___t@{http://www.alfresco.org/model/content/1.0}title</str>
             <str name="carrot.url">id</str>
             <str name="carrot.snippet">content@s___t@{http://www.alfresco.org/model/content/1.0}content</str>
             <bool name="carrot.produceSummary">true</bool>
             <bool name="carrot.outputSubClusters">false</bool>
        </lst>
        <arr name="components">
            <str>setLocale</str>
            <str>rewriteFacetParameters</str>
            <str>query</str>
            <str>facet</str>
            <str>facet_module</str>
            <str>mlt</str>
            <str>highlight</str>
            <str>stats</str>
            <str>debug</str>
            <str>clearLocale</str>
            <str>rewriteFacetCounts</str>
            <str>spellcheck</str>
            <str>spellcheckbackcompat</str>
            <str>setProcessedDenies</str>
        </arr>
        <shardHandlerFactory class="org.apache.solr.handler.component.AlfrescoHttpShardHandlerFactory" />
    </requestHandler>

    <requestHandler name="/native" class="org.apache.solr.handler.component.AlfrescoSearchHandler" lazy="true" >
        <!-- default values for query parameters can be specified, these
             will be overridden by parameters in the request
          -->
        <lst name="defaults">
            <str name="echoParams">explicit</str>
            <int name="rows">10</int>
            <str name="df">suggest</str>
        </lst>


        <arr name="components">
            <str>setLocale</str>
            <str>query</str>
            <str>facet</str>
            <str>mlt</str>
            <str>highlight</str>
            <str>stats</str>
            <str>debug</str>
            <str>clearLocale</str>
        </arr>

        <shardHandlerFactory class="org.apache.solr.handler.component.AlfrescoHttpShardHandlerFactory" />
    </requestHandler>

    <requestHandler name="/cmis" class="org.apache.solr.handler.component.AlfrescoSearchHandler" lazy="true" >
        <lst name="defaults">
            <str name="defType">cmis</str>
        </lst>
        <arr name="components">
            <str>query</str>
            <str>facet</str>
            <str>mlt</str>
            <str>highlight</str>
            <str>stats</str>
            <str>debug</str>
        </arr>
        <shardHandlerFactory class="org.apache.solr.handler.component.AlfrescoHttpShardHandlerFactory" />
    </requestHandler>

    <searchComponent name="termsComp" class="org.apache.solr.handler.component.TermsComponent"/>

    <requestHandler name="/terms" class="org.apache.solr.handler.component.SearchHandler">
        <arr name="components">
            <str>termsComp</str>
        </arr>
    </requestHandler>

    <requestHandler name="mltrh" class="org.apache.solr.handler.component.SearchHandler">

    </requestHandler>

    <searchComponent name="tvComponent" class="org.apache.solr.handler.component.TermVectorComponent"/>

    <requestHandler name="tvrh" class="org.apache.solr.handler.component.SearchHandler">
        <lst name="defaults">

        </lst>
        <arr name="last-components">
            <str>tvComponent</str>
        </arr>
    </requestHandler>

    <requestHandler name="/stream" class="org.alfresco.solr.stream.AlfrescoStreamHandler">
        <lst name="defaults">
            <str name="wt">json</str>
        </lst>
        <lst name="invariants">
            <str name="distrib">false</str>
        </lst>
    </requestHandler>

    <requestHandler name="/mlt" class="solr.MoreLikeThisHandler">
    </requestHandler>

    <searchComponent class="solr.HighlightComponent" name="highlight">
        <highlighting class="org.apache.solr.handler.component.AlfrescoSolrHighlighter">
            <!-- Configure the standard fragmenter -->
            <fragmenter name="gap" class="org.apache.solr.highlight.GapFragmenter" default="true">
                <lst name="defaults">
                    <int name="hl.fragsize">100</int>
                </lst>
            </fragmenter>

            <fragmenter name="regex" class="org.apache.solr.highlight.RegexFragmenter">
                <lst name="defaults">
                    <!-- slightly smaller fragsizes work better because of slop -->
                    <int name="hl.fragsize">70</int>
                    <!-- allow 50% slop on fragment sizes -->
                    <float name="hl.regex.slop">0.5</float>
                    <!-- a basic sentence pattern -->
                    <str name="hl.regex.pattern">[-\w ,/\n\&quot;&apos;]{20,200}</str>
                </lst>
            </fragmenter>

            <!-- Configure the standard formatter -->
            <formatter name="html" class="org.apache.solr.highlight.HtmlFormatter" default="true">
                <lst name="defaults">
                    <str name="hl.simple.pre"><![CDATA[<em>]]></str>
                    <str name="hl.simple.post"><![CDATA[</em>]]></str>
                </lst>
            </formatter>

            <!-- Configure the standard encoder -->
            <encoder name="html" class="solr.highlight.HtmlEncoder"/>

            <!-- Configure the standard fragListBuilder -->
            <fragListBuilder name="simple" class="solr.highlight.SimpleFragListBuilder"/>

            <!-- Configure the single fragListBuilder -->
            <fragListBuilder name="single" class="solr.highlight.SingleFragListBuilder"/>

            <!-- Configure the weighted fragListBuilder -->
            <fragListBuilder name="weighted" default="true" class="solr.highlight.WeightedFragListBuilder"/>

            <!-- default tag FragmentsBuilder -->
            <fragmentsBuilder name="default" default="true" class="solr.highlight.ScoreOrderFragmentsBuilder">
                <!--
                <lst name="defaults">
                  <str name="hl.multiValuedSeparatorChar">/</str>
                </lst>
                -->
            </fragmentsBuilder>

            <!-- multi-colored tag FragmentsBuilder -->
            <fragmentsBuilder name="colored" class="solr.highlight.ScoreOrderFragmentsBuilder">
                <lst name="defaults">
                    <str name="hl.tag.pre"><![CDATA[
               <b style="background:yellow">,<b style="background:lawgreen">,
               <b style="background:aquamarine">,<b style="background:magenta">,
               <b style="background:palegreen">,<b style="background:coral">,
               <b style="background:wheat">,<b style="background:khaki">,
               <b style="background:lime">,<b style="background:deepskyblue">]]></str>
                    <str name="hl.tag.post"><![CDATA[</b>]]></str>
                </lst>
            </fragmentsBuilder>

            <boundaryScanner name="default" default="true" class="solr.highlight.SimpleBoundaryScanner">
                <lst name="defaults">
                    <str name="hl.bs.maxScan">10</str>
                    <str name="hl.bs.chars">.,!? &#9;&#10;&#13;</str>
                </lst>
            </boundaryScanner>

            <boundaryScanner name="breakIterator" class="solr.highlight.BreakIteratorBoundaryScanner">
                <lst name="defaults">
                    <!-- type should be one of CHARACTER, WORD(default), LINE and SENTENCE -->
                    <str name="hl.bs.type">WORD</str>
                    <!-- language and country are used when constructing Locale object.  -->
                    <!-- And the Locale object will be used when getting instance of BreakIterator -->
                    <str name="hl.bs.language">en</str>
                    <str name="hl.bs.country">US</str>
                </lst>
            </boundaryScanner>
        </highlighting>
    </searchComponent>

    <!-- enable streaming for testing... -->
    <requestDispatcher handleSelect="true" >
        <requestParsers enableRemoteStreaming="true" multipartUploadLimitInKB="2048" />
        <httpCaching lastModifiedFrom="openTime" etagSeed="Solr" never304="false">
            <cacheControl>max-age=30, public</cacheControl>
        </httpCaching>
    </requestDispatcher>

    <!-- Echo the request contents back to the client -->
    <requestHandler name="/debug/dump" class="solr.DumpRequestHandler" >
        <lst name="defaults">
            <str name="echoParams">explicit</str>
            <str name="echoHandler">true</str>
        </lst>
    </requestHandler>

    <admin>
        <defaultQuery>solr</defaultQuery>
        <gettableFiles>solrconfig.xml schema.xml admin-extra.html</gettableFiles>
    </admin>

    <!-- test getting system property -->
    <!--  
    <propTest attr1="${solr.test.sys.prop1}-$${literal}"
              attr2="${non.existent.sys.prop:default-from-config}">prefix-${solr.test.sys.prop2}-suffix</propTest>
              -->

    <queryParser name="alfrescoReRank" class="org.alfresco.solr.query.AlfrescoReRankQParserPlugin"/>
    <queryParser name="afts" class="org.alfresco.solr.query.AlfrescoFTSQParserPlugin"/>
    <queryParser name="cmis" class="org.alfresco.solr.query.CmisQParserPlugin"/>

    <expressible name="timeSeries" class="org.alfresco.solr.stream.TimeSeriesStream"/>
    <expressible name="stats" class="org.alfresco.solr.stream.StatsStream"/>
    <expressible name="alfrescoStats" class="org.alfresco.solr.stream.AlfrescoStatsStream"/>
    <expressible name="alfrescoTimeSeries" class="org.alfresco.solr.stream.AlfrescoTimeSeriesStream"/>
    <expressible name="alfrescoExpr" class="org.alfresco.solr.stream.AlfrescoExpressionStream"/>
    <expressible name="search" class="org.alfresco.solr.stream.SearchStream"/>
    <expressible name="facets" class="org.alfresco.solr.stream.FacetStream"/>

    <!--
    <queryParser name="mimetype" class="org.alfresco.solr.query.MimetypeGroupingQParserPlugin" >
        <str name="mapping">conf/mime_types.csv</str>
    </queryParser>
    -->
    <queryParser name="contentSize" class="org.alfresco.solr.query.ContentSizeGroupingQParserPlugin" >
        <int name="scale">1</int>
        <int name="buckets">10</int>
    </queryParser>
    <searchComponent name="setLocale"     class="org.alfresco.solr.component.SetLocaleComponent" />
    <searchComponent name="clearLocale"   class="org.alfresco.solr.component.ClearLocaleComponent" />

    <!-- Spell Check

     The spell check component can return a list of alternative spelling
     suggestions.

     http://wiki.apache.org/solr/SpellCheckComponent
  -->
    <searchComponent name="spellcheck" class="org.alfresco.solr.component.spellcheck.AlfrescoSpellCheckComponent">

        <str name="queryAnalyzerFieldType">text_shingle</str>

        <!-- Multiple "Spell Checkers" can be declared and used by this
             component
          -->

        <!-- a spellchecker built from a field of the main index -->
        <lst name="spellchecker">
            <str name="name">default</str>
            <str name="field">suggest</str>
            <str name="classname">solr.DirectSolrSpellChecker</str>
            <!-- the spellcheck distance measure used, the default is the internal levenshtein -->
            <str name="distanceMeasure">internal</str>
            <!-- minimum accuracy needed to be considered a valid spellcheck suggestion -->
            <float name="accuracy">0.5</float>
            <!-- the maximum #edits we consider when enumerating terms: can be 1 or 2 -->
            <int name="maxEdits">2</int>
            <!-- the minimum shared prefix when enumerating terms -->
            <int name="minPrefix">1</int>
            <!-- maximum number of inspections per result. -->
            <int name="maxInspections">5</int>
            <!-- minimum length of a query term to be considered for correction -->
            <int name="minQueryLength">4</int>
            <!-- maximum threshold of documents a query term can appear to be considered for correction -->
            <float name="maxQueryFrequency">0.01</float>
            <!-- uncomment this to require suggestions to occur in 1% of the documents
              <float name="thresholdTokenFrequency">.01</float>
            -->
        </lst>

        <!-- word break -->
        <lst name="spellchecker">
            <str name="name">wordbreak</str>
            <str name="field">suggest</str>
            <str name="classname">solr.WordBreakSolrSpellChecker</str>
            <str name="combineWords">true</str>
            <str name="breakWords">true</str>
            <int name="maxChanges">10</int>
            <int name="minBreakLength">5</int>
        </lst>

    </searchComponent>
    <searchComponent name="spellcheckbackcompat" class="org.alfresco.solr.component.spellcheck.AlfrescoSpellCheckBackCompatComponent"/>
    <searchComponent name="rewriteFacetParameters"     class="org.alfresco.solr.component.RewriteFacetParametersComponent" />
    <searchComponent name="rewriteFacetCounts"     class="org.alfresco.solr.component.RewriteFacetCountsComponent" />
    <searchComponent name="setProcessedDenies"     class="org.alfresco.solr.component.SetProcessedDeniesComponent" />


</config>

