# Using version 2 as 3 does not support resource constraint options (cpu_*, mem_* limits) for non swarm mode in Compose
version: "2"

services:

    alfresco:
        build:
          context: ./alfresco
          args:
            ALFRESCO_TAG: ${ALFRESCO_TAG}
            SOLR_COMMS: <%=secureComms%> <% if (httpMode == 'https') { %>
            TRUSTSTORE_TYPE: JCEKS
            TRUSTSTORE_PASS: kT9X6oe68t
            KEYSTORE_TYPE: JCEKS
            KEYSTORE_PASS: kT9X6oe68t <% } %>
        mem_limit: 1800m
        environment:
            JAVA_OPTS : "
                -Ddb.driver=org.postgresql.Driver
                -Ddb.username=alfresco
                -Ddb.password=alfresco
                -Ddb.url=jdbc:postgresql://postgres:5432/alfresco
                -Dsolr.host=<%=searchSolrHost%>
                -Dsolr.port.ssl=8983
                -Dsolr.secureComms=<%=secureComms%>
                -Dsolr.base.url=/solr
                -Dindex.subsystem.name=solr6
                -Dshare.host=localhost
                -Dalfresco.port=8082
                -Daos.baseUrlOverwrite=http://localhost:8082/alfresco/aos
                -Dmessaging.broker.url=\"failover:(nio://activemq:61616)?timeout=3000&jms.useCompression=true\"
                -Ddeployment.method=DOCKER_COMPOSE
                -Dcsrf.filter.enabled=false
                -Dalfresco.restApi.basicAuthScheme=true
                -Xms1500m -Xmx1500m
                "
        ports:
            - 8082:8080 <% if (httpMode == 'https') { %>
            - 8443:8443
        volumes:
            - ./keystores/alfresco:/usr/local/tomcat/alf_data/keystore <% } %>

    solr6:
        build:
          context: ./search
          args:
            SEARCH_TAG: ${SEARCH_TAG}
            SOLR_HOSTNAME: solr6
            ALFRESCO_HOSTNAME: alfresco
            ALFRESCO_COMMS: <%=secureComms%> <% if (httpMode == 'https') { %>
            TRUSTSTORE_TYPE: JCEKS
            KEYSTORE_TYPE: JCEKS <% } %> <% if (replication == 'true') { %>
            ENABLE_MASTER: "true"
            ENABLE_SLAVE: "false" <% } %>
        mem_limit: 1200m
        environment:
            #Solr needs to know how to register itself with Alfresco
            SOLR_ALFRESCO_HOST: "alfresco"
            SOLR_ALFRESCO_PORT: "<%=alfrescoPort%>"
            ALFRESCO_SECURE_COMMS: <%=secureComms%>
            #Alfresco needs to know how to call solr
            SOLR_SOLR_HOST: "solr6"
            SOLR_SOLR_PORT: "8983"
            #Create the default alfresco and archive cores
            SOLR_CREATE_ALFRESCO_DEFAULTS: "alfresco,archive"
            SOLR_JAVA_MEM: "-Xms1g -Xmx1g" <% if (httpMode == 'https') { %>
            SOLR_SSL_TRUST_STORE: "/opt/<%=searchPath%>/keystore/ssl.repo.client.truststore"
            SOLR_SSL_TRUST_STORE_PASSWORD: "kT9X6oe68t"
            SOLR_SSL_TRUST_STORE_TYPE: "JCEKS"
            SOLR_SSL_KEY_STORE: "/opt/<%=searchPath%>/keystore/ssl.repo.client.keystore"
            SOLR_SSL_KEY_STORE_PASSWORD: "kT9X6oe68t"
            SOLR_SSL_KEY_STORE_TYPE: "JCEKS"
            SOLR_SSL_NEED_CLIENT_AUTH: "true"
            SOLR_OPTS: "
                -Dsolr.ssl.checkPeerName=false
                -Dsolr.allow.unsafe.resourceloading=true
            " <% } %>
        ports:
            - 8083:8983 <% if (httpMode == 'https') { %>
        volumes:
            - ./keystores/solr:/opt/<%=searchPath%>/keystore <% } %>

    <% if (replication == 'true') { %>
    solr6secondary:
        build:
          context: ./search
          args:
            SEARCH_TAG: ${SEARCH_TAG}
            SOLR_HOSTNAME: solr6secondary
            ALFRESCO_HOSTNAME: alfresco
            ALFRESCO_COMMS: <%=secureComms%> <% if (httpMode == 'https') { %>
            TRUSTSTORE_TYPE: JCEKS
            KEYSTORE_TYPE: JCEKS <% } %> <% if (replication == 'true') { %>
            ENABLE_MASTER: "true"
            ENABLE_SLAVE: "false"
            MASTER_HOST: solr6 <% } %>
        mem_limit: 1200m
        environment:
            #Solr needs to know how to register itself with Alfresco
            SOLR_ALFRESCO_HOST: "alfresco"
            SOLR_ALFRESCO_PORT: "<%=alfrescoPort%>"
            ALFRESCO_SECURE_COMMS: <%=secureComms%>
            #Alfresco needs to know how to call solr
            SOLR_SOLR_HOST: "solr6secondary"
            SOLR_SOLR_PORT: "8983"
            #Create the default alfresco and archive cores
            SOLR_CREATE_ALFRESCO_DEFAULTS: "alfresco,archive"
            SOLR_JAVA_MEM: "-Xms1g -Xmx1g" <% if (httpMode == 'https') { %>
            SOLR_SSL_TRUST_STORE: "/opt/<%=searchPath%>/keystore/ssl.repo.client.truststore"
            SOLR_SSL_TRUST_STORE_PASSWORD: "kT9X6oe68t"
            SOLR_SSL_TRUST_STORE_TYPE: "JCEKS"
            SOLR_SSL_KEY_STORE: "/opt/<%=searchPath%>/keystore/ssl.repo.client.keystore"
            SOLR_SSL_KEY_STORE_PASSWORD: "kT9X6oe68t"
            SOLR_SSL_KEY_STORE_TYPE: "JCEKS"
            SOLR_SSL_NEED_CLIENT_AUTH: "true"
            SOLR_OPTS: "
                -Dsolr.ssl.checkPeerName=false
                -Dsolr.allow.unsafe.resourceloading=true
            " <% } %>
        ports:
            - 8084:8983  <% if (httpMode == 'https') { %>
        volumes:
            - ./keystores/solr:/opt/<%=searchPath%>/keystore <% } %>
    <% } %>

    share:
        image: alfresco/alfresco-share:${SHARE_TAG}
        mem_limit: 1g
        environment:
            REPO_HOST: "alfresco"
            REPO_PORT: "8080"
            JAVA_OPTS: "
                -Xms500m
                -Xmx500m
                -Dalfresco.host=localhost
                -Dalfresco.port=8080
                -Dalfresco.context=alfresco
                -Dalfresco.protocol=http
                "
        ports:
            - 8080:8080

    postgres:
        image: postgres:${POSTGRES_TAG}
        mem_limit: 512m
        environment:
            - POSTGRES_PASSWORD=alfresco
            - POSTGRES_USER=alfresco
            - POSTGRES_DB=alfresco
        command: postgres -c max_connections=300 -c log_min_messages=LOG
        ports:
            - 5432:5432

    activemq:
        image: alfresco/alfresco-activemq:${ACTIVE_MQ_TAG}
        mem_limit: 512m
        ports:
            - 8161:8161 # Web Console
            - 5672:5672 # AMQP
            - 61616:61616 # OpenWire
            - 61613:61613 # STOMP
